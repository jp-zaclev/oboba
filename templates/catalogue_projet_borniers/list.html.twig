{% extends 'layout/project_layout.html.twig' %}

{% set container_margin = false %}

{% block title %}Catalogue des borniers - {{ projet.nom }}{% endblock %}

{% block page_content %}
    <h1 class="text-white">Catalogue des borniers pour {{ projet.nom }}</h1>

    <div class="mb-3">
        <div class="row g-2">
            <div class="col-auto">
                <a href="{{ path('projet_show', {'id': projet.id}) }}" class="btn btn-secondary">Retour à {{ projet.nom }}</a>
            </div>
            {% if is_granted('CAN_EDIT_BORNIERS', projet) %}
                <div class="col-auto">
                    <a href="{{ path('catalogue_projet_borniers_new', {'projetId': projet.id}) }}" class="btn btn-primary">Ajouter un bornier</a>
                </div>
                <div class="col-auto">
                    <form method="post" action="{{ path('catalogue_projet_borniers_import', {'projetId': projet.id}) }}" style="display:inline;" onsubmit="return confirm('Importer les nouveaux borniers du catalogue modèle ? Les borniers existants resteront inchangés.');">
                        <input type="hidden" name="_token" value="{{ csrf_token('import_borniers_' ~ projet.id) }}">
                        <button type="submit" class="btn btn-primary">Importer les nouveaux borniers</button>
                    </form>
                </div>
            {% endif %}
        </div>
    </div>

    {{ form_start(filter_form, {'method': 'GET'}) }}
        <div class="row mb-3">
            <div class="col">{{ form_row(filter_form.nom, {'attr': {'class': 'form-control'}}) }}</div>
            <div class="col">{{ form_row(filter_form.nombreBornes, {'attr': {'class': 'form-control'}}) }}</div>
            <div class="col">{{ form_row(filter_form.caracteristiques, {'attr': {'class': 'form-control'}}) }}</div>
            <div class="col">{{ form_row(filter_form.prixUnitaireMin, {'attr': {'class': 'form-control'}}) }}</div>
            <div class="col">{{ form_row(filter_form.prixUnitaireMax, {'attr': {'class': 'form-control'}}) }}</div>
            <div class="col-auto">
                <button type="submit" class="btn btn-primary mt-4">Filtrer</button>
            </div>
        </div>
    {{ form_end(filter_form) }}

    {% if borniers is empty %}
        <p class="text-white">Aucun bornier dans le catalogue pour ce projet.</p>
    {% else %}
        <form method="post" id="delete-form" onsubmit="return confirm('Supprimer les borniers sélectionnés ?');">
            {% if is_granted('CAN_EDIT_BORNIERS', projet) %}
                <div class="mb-3">
                    <button type="submit" class="btn btn-danger" id="delete-selected" disabled>Effacer les éléments sélectionnés</button>
                </div>
            {% endif %}

            <table class="table table-striped">
                <thead>
                    <tr>
                        {% if is_granted('CAN_EDIT_BORNIERS', projet) %}
                            <th><input type="checkbox" id="select-all"></th>
                        {% endif %}
                        <th>{{ knp_pagination_sortable(borniers, 'Nom', 'b.nom') }}</th>
                        <th>{{ knp_pagination_sortable(borniers, 'Nombre de bornes', 'b.nombreBornes') }}</th>
                        <th>{{ knp_pagination_sortable(borniers, 'Caractéristiques', 'b.caracteristiques') }}</th>
                        <th>{{ knp_pagination_sortable(borniers, 'Prix unitaire', 'b.prixUnitaire') }}</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    {% for bornier in borniers %}
                        <tr>
                            {% if is_granted('CAN_EDIT_BORNIERS', projet) %}
                                <td>
                                    <input type="checkbox" name="selected_items[]" value="{{ bornier.id }}"
                                           class="select-item" {% if bornier.id in selected_ids %}checked{% endif %}>
                                </td>
                            {% endif %}
                            <td>{{ bornier.nom }}</td>
                            <td>{{ bornier.nombreBornes }}</td>
                            <td>{{ bornier.caracteristiques|default('N/A') }}</td>
                            <td>{{ bornier.prixUnitaire|number_format(2, '.', ',') }}</td>
                            <td>
                                {% if is_granted('CAN_EDIT_BORNIERS', projet) %}
                                    <a href="{{ path('catalogue_projet_borniers_edit', {'id': bornier.id}) }}" class="btn btn-sm btn-warning">Modifier</a>
                                    <form method="post" action="{{ path('catalogue_projet_borniers_delete', {'id': bornier.id}) }}" style="display:inline;" onsubmit="return confirm('Supprimer ce bornier du catalogue ?');">
                                        <input type="hidden" name="_token" value="{{ csrf_token('delete_' ~ bornier.id) }}">
                                        <button type="submit" class="btn btn-sm btn-danger">Supprimer</button>
                                    </form>
                                {% endif %}
                            </td>
                        </tr>
                    {% endfor %}
                </tbody>
            </table>

            <div class="navigation">
                {{ knp_pagination_render(borniers) }}
            </div>
        </form>
    {% endif %}

    {% if is_granted('CAN_EDIT_BORNIERS', projet) %}
        <script>
            document.addEventListener('DOMContentLoaded', function () {
                const selectAll = document.getElementById('select-all');
                const selectItems = document.querySelectorAll('.select-item');
                const deleteButton = document.getElementById('delete-selected');

                function updateDeleteButton() {
                    const checkedCount = document.querySelectorAll('.select-item:checked').length;
                    deleteButton.disabled = checkedCount === 0;
                }

                selectAll.addEventListener('change', function () {
                    selectItems.forEach(item => {
                        item.checked = selectAll.checked;
                        toggleSelection(item);
                    });
                    updateDeleteButton();
                });

                selectItems.forEach(item => {
                    item.addEventListener('change', function () {
                        toggleSelection(item);
                        updateDeleteButton();
                        selectAll.checked = document.querySelectorAll('.select-item:not(:checked)').length === 0;
                    });
                });

                function toggleSelection(item) {
                    const itemId = item.value;
                    fetch(`{{ path('catalogue_projet_borniers_list', {'projetId': projet.id}) }}?toggle_selection=1&item_id=${itemId}`, {
                        method: 'GET',
                    }).then(response => response.json())
                      .then(data => console.log('Sélection mise à jour:', data.selected));
                }

                updateDeleteButton();
            });
        </script>
    {% endif %}
{% endblock %}
